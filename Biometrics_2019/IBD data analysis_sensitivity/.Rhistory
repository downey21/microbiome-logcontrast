p3 <-ggplot(stab, aes(x=x, y = prob,group=factor(group),color = factor(ind)))+geom_line(size=1)+scale_x_reverse()
p3 <-p3 + scale_color_manual(values=c("grey","#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7"),labels=c("others", "copri","bromii","leptum","coli","gnavus")) + xlab("lambda")+ylab("selecton probability")+labs(color=NULL,size=30)
p3
ggsave("C:/Users/Jerry Lu/Dropbox/graduate research/glm lasso/code-final version/IBD data analysis/plots/stability_noc.png", width = 15, height = 15, units = "cm")
ggsave("C:/Users/Jerry Lu/Dropbox/graduate research/glm lasso/code-final version/IBD data analysis/plots/stability_noc.pdf", width = 15, height = 15, units = "cm")
set.seed(1000)
n = 1000
u = rbinom(n,1,0.4)
A0 = rbinom(n,1,0.5)
meanl1 = 0.25 +0.3*A0-0.2*u-0.05*A0*u
L1 = rbinom(n,1,meanl1)
meana1 = 0.4 + 0.5*A0 - 0.3*L1- 0.4*A0*L1
A1 = rbinom(n,1,meana1)
meany = 2.4 - 0.5*A0 - 0.75*A1+ 0.2*A0*A1-u
y = rnorm(n,meany,0.2)
lm0 = lm(A0~1)
p0 = lm0$fitted.values
p0[A0==0]=1-p0[A0==0]
lm1 = lm(A1~A0 + L1 +A0*L1)
p1 = lm1$fitted.values
p1[A1==0]=1-p1[A1==0]
p = p0 *p1
w = 1/p
model1 = lm(y~A0 + A1 + A0*A1)
summary(model1)
model1 = lm(y~A0 + A1 + A0*A1,weights = w)
summary(model1)
model2 = lm(L1~A0)
coeff1 = model2$coefficients[1]
coeff2 = sum(model2$coefficients)
model3 = lm(y~A0 + A1 + L1 + A0*A1 + A0*L1 +A1*L1 + A0*A1*L1)
coeff = model3$coefficients
Gcomp_y00 = (coeff[1] + coeff[4])*coeff1 + coeff[1]*(1 - coeff1)
Gcomp_y11 = sum(coeff)*coeff2 + (coeff[1]+coeff[2]+coeff[3]+coeff[5])*(1-coeff2)
Gcomp_y11 - Gcomp_y00
library("boot", lib.loc="~/R/win-library/3.2")
data = as.data.frame(cbind(y,A0,A1,L1))
Gcomp = function(data,I){
y = data[I,1]
L1 = data[I,4]
A0 = data[I,2]
A1 = data[I,3]
model2 = lm(L1~A0)
coeff1 = model2$coefficients[1]
coeff2 = sum(model2$coefficients)
model3 = lm(y~A0 + A1 + L1 + A0*A1 + A0*L1 +A1*L1 + A0*A1*L1)
coeff = model3$coefficients
Gcomp_y00 = (coeff[1] + coeff[4])*coeff1 + coeff[1]*(1 - coeff1)
Gcomp_y11 = sum(coeff)*coeff2 + (coeff[1]+coeff[2]+coeff[3]+coeff[5])*(1-coeff2)
return(as.numeric(Gcomp_y11 - Gcomp_y00))
}
set.seed(233)
result = boot(data,Gcomp,R=1000)
boot.ci(result,type = "norm")
plot(x,x=c(1,4))
plot(x,x^2x=c(1,4))
plot(x,x^2,x=c(1,4))
plot(x,x^2,x=seq(1,4))
?plot
plot(x,1,4)
plot(sin, -pi, 2*pi)
View(data)
sum(data$A1)
sum(1-data$A1)
data_A1 = subset(data, A1==1)
View(data)
data_A1 = subset(data, A1==1)
data_A0 = subset(data, A1==0)
data_A1L1 = subset(data_A1,L1==1)
data_A1L0 = subset(data_A1,L1==0)
data_A0L1 = subset(data_A0,L1==1)
data_A0L0 = subset(data_A0,L1==0)
sum(data_A0L1$A2)
View(data_A0L1)
sum(data$A0)
data_A1 = subset(data, A0==1)
data_A0 = subset(data, A0==0)
data_A1L1 = subset(data_A1,L1==1)
data_A1L0 = subset(data_A1,L1==0)
data_A0L1 = subset(data_A0,L1==1)
data_A0L0 = subset(data_A0,L1==0)
set.seed(1000)
n = 1000
u = rbinom(n,1,0.4)
A0 = rbinom(n,1,0.5)
meanl1 = 0.25 +0.3*A0-0.2*u-0.05*A0*u
L1 = rbinom(n,1,meanl1)
meana1 = 0.4 + 0.5*A0 - 0.3*L1- 0.4*A0*L1
A1 = rbinom(n,1,meana1)
meany = 2.4 - 0.5*A0 - 0.75*A1+ 0.2*A0*A1-u
y = rnorm(n,meany,0.2)
data = as.data.frame(cbind(y,A0,A1,L1))
data_A1 = subset(data, A0==1)
data_A0 = subset(data, A0==0)
data_A1L1 = subset(data_A1,L1==1)
data_A1L0 = subset(data_A1,L1==0)
data_A0L1 = subset(data_A0,L1==1)
data_A0L0 = subset(data_A0,L1==0)
data_A1L1A0 = subset(data_A1L1,A1==0)
data_A1L1A1 = subset(data_A1L1,A1==1)
data_A1L0A0 = subset(data_A1L0,A1==0)
data_A1L0A1 = subset(data_A1L0,A1==1)
data_A0L1A0 = subset(data_A0L1,A1==0)
data_A0L1A1 = subset(data_A0L1,A1==1)
data_A0L0A0 = subset(data_A0L0,A1==0)
data_A0L0A1 = subset(data_A0L0,A1==1)
mean(data_A0L1A1)
mean(data_A0L1A1$y)
mean(data_A0L1A0$y)
mean(data_A0L0A1$y)
mean(data_A0L0A0$y)
mean(data_A1L1A1$y)
mean(data_A1L1A0$y)
mean(data_A1L0A1$y)
mean(data_A1L0A0$y)
View(data)
set.seed(1000)
n = 1000
u = rbinom(n,1,0.4)
A0 = rbinom(n,1,0.5)
meanl1 = 0.25 +0.3*A0-0.2*u-0.05*A0*u
L1 = rbinom(n,1,meanl1)
meana1 = 0.4 + 0.5*A0 - 0.3*L1- 0.4*A0*L1
A1 = rbinom(n,1,meana1)
meany = 2.4 - 0.5*A0 - 0.75*A1+ 0.2*A0*A1-u
y = rnorm(n,meany,0.2)
y
89/508*1.49 + 419/508 *1.24
222/492*1.06 + 270/492*0.78
set.seed(1000)
n = 1000
u = rbinom(n,1,0.4)
A0 = rbinom(n,1,0.5)
meanl1 = 0.25 +0.3*A0-0.2*u-0.05*A0*u
L1 = rbinom(n,1,meanl1)
meana1 = 0.4 + 0.5*A0 - 0.3*L1- 0.4*A0*L1
A1 = rbinom(n,1,meana1)
meany = 2.5 - 0.5*A0 - 0.75*A1+ 0.2*A0*A1-u
y = rnorm(n,meany,0.2)
lm0 = lm(A0~1)
p0 = lm0$fitted.values
p0[A0==0]=1-p0[A0==0]
lm1 = lm(A1~A0 + L1 +A0*L1)
p1 = lm1$fitted.values
p1[A1==0]=1-p1[A1==0]
p = p0 *p1
w = 1/p
model1 = lm(y~A0 + A1 + A0*A1,weights = w)
summary(model1)
est = sum(model1$coefficients[2:4])
vec = as.vector(c(0,1,1,1))
A = as.matrix(vcov(model1))
var = vec%*%A%*%vec
CI_l = est - 1.96*sqrt(var)
CI_u = est + 1.96*sqrt(var)
est
cI_l
CI_u
est = sum(model1$coefficients[2:4])
vec = as.vector(c(0,1,1,1))
A = as.matrix(vcov(model1))
var = vec%*%A%*%vec
CI_l = est - 1.96*sqrt(var)
CI_u = est + 1.96*sqrt(var)
est
cI_l
CI_u
est = sum(model1$coefficients[2:4])
vec = as.vector(c(0,1,1,1))
A = as.matrix(vcov(model1))
var = vec%*%A%*%vec
CI_l = est - 1.96*sqrt(var)
CI_u = est + 1.96*sqrt(var)
est
CI_l
CI_u
model2 = lm(L1~A0)
coeff1 = model2$coefficients[1]
coeff2 = sum(model2$coefficients)
model3 = lm(y~A0 + A1 + L1 + A0*A1 + A0*L1 +A1*L1 + A0*A1*L1)
coeff = model3$coefficients
Gcomp_y00 = (coeff[1] + coeff[4])*coeff1 + coeff[1]*(1 - coeff1)
Gcomp_y11 = sum(coeff)*coeff2 + (coeff[1]+coeff[2]+coeff[3]+coeff[5])*(1-coeff2)
Gcomp_y11
Gcomp_y00
Gcomp_y00
library("boot", lib.loc="~/R/win-library/3.2")
data = as.data.frame(cbind(y,A0,A1,L1))
Gcomp = function(data,I){
y = data[I,1]
L1 = data[I,4]
A0 = data[I,2]
A1 = data[I,3]
model2 = lm(L1~A0)
coeff1 = model2$coefficients[1]
coeff2 = sum(model2$coefficients)
model3 = lm(y~A0 + A1 + L1 + A0*A1 + A0*L1 +A1*L1 + A0*A1*L1)
coeff = model3$coefficients
Gcomp_y00 = (coeff[1] + coeff[4])*coeff1 + coeff[1]*(1 - coeff1)
Gcomp_y11 = sum(coeff)*coeff2 + (coeff[1]+coeff[2]+coeff[3]+coeff[5])*(1-coeff2)
return(as.numeric(Gcomp_y11 - Gcomp_y00))
}
set.seed(233)
result = boot(data,Gcomp,R=1000)
boot.ci(result,type = "norm")
library("ggplot2", lib.loc="~/R/win-library/3.2")
library("pastecs", lib.loc="~/R/win-library/3.2")
library("gridExtra", lib.loc="~/R/win-library/3.2")
library("scales", lib.loc="~/R/win-library/3.2")
library("ggplot2", lib.loc="~/R/win-library/3.2")
library("gridExtra", lib.loc="~/R/win-library/3.2")
library("scales", lib.loc="~/R/win-library/3.2")
x <- read.csv("C:/Users/Jerry Lu/Desktop/Upenn Study/Graduate Research/Lab rotation with Yong/Code/Code for GLM Lasso/result/coverage_sim100.csv", header=FALSE)
x <- read.csv("C:/Users/Jerry Lu/Desktop/Upenn Study/Graduate Research/Lab rotation with Yong/Code/Code for GLM Lasso/result/coverage_sim50.csv", header=FALSE)
plot <-ggplot(x=[,1], y=..density..)+geom_histogram(binwidth=0.1, fill="cornsilk",colour="black")+geom_density()
plot <-ggplot(x=x[,1], y=..density..)+geom_histogram(binwidth=0.1, fill="cornsilk",colour="black")+geom_density()
plot
View(x)
plot <-ggplot(x=x[,1], y=..density..)+geom_histogram(binwidth=0.01, fill="cornsilk",colour="black")+geom_density()
plot
View(x)
x <- read.csv("C:/Users/Jerry Lu/Desktop/Upenn Study/Graduate Research/Lab rotation with Yong/Code/Code for GLM Lasso/result/coverage_sim50.csv", header=FALSE)
p <- dim(x)[1]
N <- dim(x)[2]
data = as.data.frame(matrix(0,p*N,2))
for (i in 1:N){
data[(p*(i-1)+1):(p*i),1] = x[,i]
data[(p*(i-1)+1):(p*i),2] = i
}
names(data) = c("P", "cate")
View(data)
plot <-ggplot(x=data$p, y=..density..)+geom_histogram(binwidth=0.01, fill="cornsilk",colour="black")+geom_density()
plot
View(data)
plot <-ggplot(data,aes(x=data$p,y=..density..))+geom_histogram(binwidth=0.01, fill="cornsilk",colour="black")+geom_density()
plot
plot <-ggplot(x,aes(x=x[,1],y=..density..))+geom_histogram(binwidth=0.01, fill="cornsilk",colour="black")+geom_density()
plot
plot <-ggplot(x,aes(x=x[,1],y=..density..))+geom_histogram(binwidth=0.01, fill="cornsilk",colour="black")+xlim(0.5,1)
plot
plot <-ggplot(x,aes(x=x[,1],y=..density..))+geom_histogram(binwidth=0.01, fill="cornsilk",colour="black")+xlim(0.7,1)
plot
plot <-ggplot(x,aes(x=x[,1],y=..density..))+geom_histogram(binwidth=0.005, fill="cornsilk",colour="black")+xlim(0.7,1)
plot
plot <-ggplot(x,aes(x=x[,1]))+geom_histogram(binwidth=0.01, fill="cornsilk",colour="black")+xlim(0.7,1)
plot
cat = rep(1,51)
plot <-ggplot(x,aes(x=x[,1]),color = cat)+geom_histogram(binwidth=0.01, fill="cornsilk",colour="black")+xlim(0.7,1)
plot
cat = c(0,rep(1,50))
plot <-ggplot(x,aes(x=x[,1]),color = cat)+geom_histogram(binwidth=0.01, fill="cornsilk",colour="black")+xlim(0.7,1)
plot
cat = c(0,rep(1,50))
plot <-ggplot(x,aes(x=x[,1],color = cat))+geom_histogram(binwidth=0.01, fill="cornsilk",colour="black")+xlim(0.7,1)
plot
cat = c(0,rep(1,50))
plot <-ggplot(x,aes(x=x[,1],color = factor(cat)))+geom_histogram(binwidth=0.01, fill="cornsilk",colour="black")+xlim(0.7,1)
plot
x$cat = rep(0,p)
x$cat[1,2,3,4]=1
x$cat = rep(0,p)
x$cat[c(1,2,3,4)]=1
plot <-ggplot(x,aes(x=x[,1],color = factor(cat)))+geom_histogram(binwidth=0.01, fill="cornsilk",colour="black")+xlim(0.7,1)
plot
plot <-ggplot(x,aes(x=x[,1],color = factor(cat)))+geom_histogram(binwidth=0.01)+xlim(0.7,1)
plot
x$cat = rep(1,p)
x$cat[c(1,2,3,4)]=2
plot <-ggplot(x,aes(x=x[,1],color = factor(cat)))+geom_histogram(binwidth=0.01)+xlim(0.7,1)
plot
plot <-ggplot(x,aes(x=x[,1],color = factor(cat)))+geom_histogram(binwidth=0.01,fill="white")+xlim(0.7,1)
plot
plot <-ggplot(x,aes(x=x[,1],fill = factor(cat)))+geom_histogram(binwidth=0.01,colour="black")+xlim(0.7,1)
plot
x <- read.csv("C:/Users/Jerry Lu/Desktop/Upenn Study/Graduate Research/Lab rotation with Yong/Code/Code for GLM Lasso/result/coverage_sim50.csv", header=FALSE)
x <- read.csv("C:/Users/Jerry Lu/Desktop/Upenn Study/Graduate Research/Lab rotation with Yong/Code/Code for GLM Lasso/result/length_sim100.csv", header=FALSE)
x$cat = rep(0,p)
x$cat[c(2,3,4,6,12,14,17)]=1
x <- read.csv("C:/Users/Jerry Lu/Desktop/Upenn Study/Graduate Research/Lab rotation with Yong/Code/Code for GLM Lasso/result/coverage_sim50.csv", header=FALSE)
p <- dim(x)[1]
N <- dim(x)[2]
data = as.data.frame(matrix(0,p*N,2))
for (i in 1:N){
data[(p*(i-1)+1):(p*i),1] = x[,i]
data[(p*(i-1)+1):(p*i),2] = i
}
names(data) = c("P", "cate")
x$cat = rep(0,p)
x$cat[c(2,3,4,6,12,14,17)]=1
plot <-ggplot(x,aes(x=x[,1],fill = factor(cat)))+geom_histogram(binwidth=0.01,colour="black")+xlim(0.7,1)
plot
plot <-ggplot(x,aes(x=x[,1],fill = factor(cat)))+geom_histogram(binwidth=0.01,colour="black")+xlim(0.7,1)
plot <- plot + xlab("Coverage probability") + scale_fill_discrete(name = "New Legend Title")
plot
p <- dim(x)[1]
N <- dim(x)[2]
data = as.data.frame(matrix(0,p*N,2))
for (i in 1:N){
data[(p*(i-1)+1):(p*i),1] = x[,i]
data[(p*(i-1)+1):(p*i),2] = i
}
names(data) = c("P", "cate")
x$cat = rep("others",p)
x$cat[c(2,3,4,6,12,14,17)]="none zero"
plot <-ggplot(x,aes(x=x[,1],fill = factor(cat)))+geom_histogram(binwidth=0.01,colour="black")+xlim(0.7,1)
plot <- plot + xlab("Coverage probability") + scale_fill_discrete(name = "Group")
plot
plot_true <-ggplot(x,aes(x=x[,1],fill = factor(cat)))+geom_histogram(binwidth=0.01,colour="black")+xlim(0.75,1)
plot <- plot + xlab("Coverage probability") + scale_fill_discrete(name = "Group")+geom_hline(xintercept = 0.95, linetype = "dashed",size =0.5)
plot_true <-ggplot(x,aes(x=x[,1],fill = factor(cat)))+geom_histogram(binwidth=0.01,colour="black")+xlim(0.75,1)
plot <- plot + xlab("Coverage probability") + scale_fill_discrete(name = "Group")
plot_true <-ggplot(x,aes(x=x[,1],fill = factor(cat)))+geom_histogram(binwidth=0.01,colour="black")+xlim(0.75,1)
plot_true <- plot + xlab("Coverage probability") + scale_fill_discrete(name = "Group")
plot_true
plot_true <-ggplot(x,aes(x=x[,1],fill = factor(cat)))+geom_histogram(binwidth=0.01,colour="black")+xlim(0.75,1)
plot_true <- plot + xlab("Coverage probability")
plot_true
plot_true <-ggplot(x,aes(x=x[,1],fill = factor(cat)))+geom_histogram(binwidth=0.01,colour="black")+xlim(0.75,1)
plot_true <- plot + xlab("Coverage probability")
plot_true
plot_true <- ggplot(x,aes(x=x[,1],fill = factor(cat)))+geom_histogram(binwidth=0.01,colour="black")+xlim(0.75,1)
plot_true <- plot_true + xlab("Coverage probability")
plot_true
plot_true <-ggplot(x,aes(x=x[,1],fill = factor(cat)))+geom_histogram(binwidth=0.01,colour="black")+xlim(0.75,1)
plot_true <- plot_true + xlab("Coverage probability") + scale_fill_discrete(name = "Group")
plot_true
plot_true <-ggplot(x,aes(x=x[,1],fill = factor(cat)))+geom_histogram(binwidth=0.01,colour="black")+xlim(0.75,1)
plot_true <- plot_true + xlab("Coverage probability") + scale_fill_discrete(name = "Group") + geom_hline(xintercept = 0.95, linetype = "dashed",size =0.5)
plot_true <-ggplot(x,aes(x=x[,1],fill = factor(cat)))+geom_histogram(binwidth=0.01,colour="black")+xlim(0.75,1)
plot_true <- plot_true + xlab("Coverage probability") + scale_fill_discrete(name = "Group") + geom_hline(yintercept = 0.95, linetype = "dashed",size =0.5)
plot_true
plot_true <-ggplot(x,aes(x=x[,1],fill = factor(cat)))+geom_histogram(binwidth=0.01,colour="black")+xlim(0.75,1)
plot_true <- plot_true + xlab("Coverage probability") + scale_fill_discrete(name = "Group") + geom_hline(x = 0.95, linetype = "dashed",size =0.5)
plot_true <-ggplot(x,aes(x=x[,1],fill = factor(cat)))+geom_histogram(binwidth=0.01,colour="black")+xlim(0.75,1)
plot_true <- plot_true + xlab("Coverage probability") + scale_fill_discrete(name = "Group") + geom_vline(aes(xintercept = 0.95), colour="black")
plot_true
plot_true <-ggplot(x,aes(x=x[,1],fill = factor(cat)))+geom_histogram(binwidth=0.01,colour="black")+xlim(0.75,1)
plot_true <- plot_true + xlab("Coverage probability") + scale_fill_discrete(name = "Group") + geom_vline(aes(xintercept = 0.95), colour="black", linetype = "dashed")
plot_true
plot_true <-ggplot(x,aes(x=x[,1],fill = factor(cat)))+geom_histogram(binwidth=0.01,colour="black")+xlim(0.75,1)
plot_true <- plot_true + xlab("Coverage probability") + scale_fill_discrete(name = "Group") + geom_vline(aes(xintercept = 0.95), colour="black", linetype = "dashed")
plot_one <-ggplot(x,aes(x=x[,2],fill = factor(cat)))+geom_histogram(binwidth=0.01,colour="black")+xlim(0.75,1)
plot_one <- plot_one + xlab("Coverage probability") + scale_fill_discrete(name = "Group") + geom_vline(aes(xintercept = 0.95), colour="black", linetype = "dashed")
plot_no <-ggplot(x,aes(x=x[,3],fill = factor(cat)))+geom_histogram(binwidth=0.01,colour="black")+xlim(0.75,1)
plot_no <- plot_no + xlab("Coverage probability") + scale_fill_discrete(name = "Group") + geom_vline(aes(xintercept = 0.95), colour="black", linetype = "dashed")
plot_wrong <-ggplot(x,aes(x=x[,4],fill = factor(cat)))+geom_histogram(binwidth=0.01,colour="black")+xlim(0.75,1)
plot_wrong <- plot_wrong + xlab("Coverage probability") + scale_fill_discrete(name = "Group") + geom_vline(aes(xintercept = 0.95), colour="black", linetype = "dashed")
grid.arrange(plot_true,plot_one,plot_no,plot_wrong,ncol=1, nrow=4)
ggsave("C:/Users/Jerry Lu/Dropbox/graduate research/glm lasso/code-final version/plots/CI_50.pdf", width = 80, height = 20, units = "cm")
plot_true <-ggplot(x,aes(x=x[,5],fill = factor(cat)))+geom_histogram(binwidth=0.01,colour="black")+xlim(0.75,1)
plot_true <- plot_true + xlab("Coverage probability") + scale_fill_discrete(name = "Group") + geom_vline(aes(xintercept = 0.95), colour="black", linetype = "dashed")
plot_one <-ggplot(x,aes(x=x[,6],fill = factor(cat)))+geom_histogram(binwidth=0.01,colour="black")+xlim(0.75,1)
plot_one <- plot_one + xlab("Coverage probability") + scale_fill_discrete(name = "Group") + geom_vline(aes(xintercept = 0.95), colour="black", linetype = "dashed")
plot_no <-ggplot(x,aes(x=x[,7],fill = factor(cat)))+geom_histogram(binwidth=0.01,colour="black")+xlim(0.75,1)
plot_no <- plot_no + xlab("Coverage probability") + scale_fill_discrete(name = "Group") + geom_vline(aes(xintercept = 0.95), colour="black", linetype = "dashed")
plot_wrong <-ggplot(x,aes(x=x[,8],fill = factor(cat)))+geom_histogram(binwidth=0.01,colour="black")+xlim(0.75,1)
plot_wrong <- plot_wrong + xlab("Coverage probability") + scale_fill_discrete(name = "Group") + geom_vline(aes(xintercept = 0.95), colour="black", linetype = "dashed")
savepath="C:/Users/Jerry Lu/Dropbox/graduate research/glm lasso/code-final version/plots/CI_100.pdf"
pdf(savepath,width = 80, height = 20, units = "cm")
grid.arrange(plot_true,plot_one,plot_no,plot_wrong,ncol=1, nrow=4)
dev.off()
plot_true <-ggplot(x,aes(x=x[,1],fill = factor(cat)))+geom_histogram(binwidth=0.01,colour="black")+xlim(0.75,1)
plot_true <- plot_true + xlab("Coverage probability") + scale_fill_discrete(name = "Group") + geom_vline(aes(xintercept = 0.95), colour="black", linetype = "dashed")
plot_one <-ggplot(x,aes(x=x[,2],fill = factor(cat)))+geom_histogram(binwidth=0.01,colour="black")+xlim(0.75,1)
plot_one <- plot_one + xlab("Coverage probability") + scale_fill_discrete(name = "Group") + geom_vline(aes(xintercept = 0.95), colour="black", linetype = "dashed")
plot_no <-ggplot(x,aes(x=x[,3],fill = factor(cat)))+geom_histogram(binwidth=0.01,colour="black")+xlim(0.75,1)
plot_no <- plot_no + xlab("Coverage probability") + scale_fill_discrete(name = "Group") + geom_vline(aes(xintercept = 0.95), colour="black", linetype = "dashed")
plot_wrong <-ggplot(x,aes(x=x[,4],fill = factor(cat)))+geom_histogram(binwidth=0.01,colour="black")+xlim(0.75,1)
plot_wrong <- plot_wrong + xlab("Coverage probability") + scale_fill_discrete(name = "Group") + geom_vline(aes(xintercept = 0.95), colour="black", linetype = "dashed")
savepath="C:/Users/Jerry Lu/Dropbox/graduate research/glm lasso/code-final version/plots/CI_50.pdf"
pdf(savepath,width = 80, height = 20, units = "cm")
grid.arrange(plot_true,plot_one,plot_no,plot_wrong,ncol=1, nrow=4)
dev.off()
plot_true <-ggplot(x,aes(x=x[,1],fill = factor(cat)))+geom_histogram(binwidth=0.01,colour="black")+xlim(0.75,1)
plot_true <- plot_true + xlab("Coverage probability") + scale_fill_discrete(name = "Group") + geom_vline(aes(xintercept = 0.95), colour="black", linetype = "dashed")
plot_one <-ggplot(x,aes(x=x[,2],fill = factor(cat)))+geom_histogram(binwidth=0.01,colour="black")+xlim(0.75,1)
plot_one <- plot_one + xlab("Coverage probability") + scale_fill_discrete(name = "Group") + geom_vline(aes(xintercept = 0.95), colour="black", linetype = "dashed")
plot_no <-ggplot(x,aes(x=x[,3],fill = factor(cat)))+geom_histogram(binwidth=0.01,colour="black")+xlim(0.75,1)
plot_no <- plot_no + xlab("Coverage probability") + scale_fill_discrete(name = "Group") + geom_vline(aes(xintercept = 0.95), colour="black", linetype = "dashed")
plot_wrong <-ggplot(x,aes(x=x[,4],fill = factor(cat)))+geom_histogram(binwidth=0.01,colour="black")+xlim(0.75,1)
plot_wrong <- plot_wrong + xlab("Coverage probability") + scale_fill_discrete(name = "Group") + geom_vline(aes(xintercept = 0.95), colour="black", linetype = "dashed")
savepath="C:/Users/Jerry Lu/Dropbox/graduate research/glm lasso/code-final version/plots/CI_50.pdf"
pdf(savepath,width = 80, height = 20)
grid.arrange(plot_true,plot_one,plot_no,plot_wrong,ncol=1, nrow=4)
dev.off()
plot_true <-ggplot(x,aes(x=x[,1],fill = factor(cat)))+geom_histogram(binwidth=0.01,colour="black")+xlim(0.75,1)
plot_true <- plot_true + xlab("Coverage probability") + scale_fill_discrete(name = "Group") + geom_vline(aes(xintercept = 0.95), colour="black", linetype = "dashed")
plot_one <-ggplot(x,aes(x=x[,2],fill = factor(cat)))+geom_histogram(binwidth=0.01,colour="black")+xlim(0.75,1)
plot_one <- plot_one + xlab("Coverage probability") + scale_fill_discrete(name = "Group") + geom_vline(aes(xintercept = 0.95), colour="black", linetype = "dashed")
plot_no <-ggplot(x,aes(x=x[,3],fill = factor(cat)))+geom_histogram(binwidth=0.01,colour="black")+xlim(0.75,1)
plot_no <- plot_no + xlab("Coverage probability") + scale_fill_discrete(name = "Group") + geom_vline(aes(xintercept = 0.95), colour="black", linetype = "dashed")
plot_wrong <-ggplot(x,aes(x=x[,4],fill = factor(cat)))+geom_histogram(binwidth=0.01,colour="black")+xlim(0.75,1)
plot_wrong <- plot_wrong + xlab("Coverage probability") + scale_fill_discrete(name = "Group") + geom_vline(aes(xintercept = 0.95), colour="black", linetype = "dashed")
savepath="C:/Users/Jerry Lu/Dropbox/graduate research/glm lasso/code-final version/plots/CI_50.pdf"
pdf(savepath,width = 200, height = 200)
grid.arrange(plot_true,plot_one,plot_no,plot_wrong,ncol=1, nrow=4)
dev.off()
grid.arrange(plot_true,plot_one,plot_no,plot_wrong,ncol=1, nrow=4)
grid.arrange(plot_true,plot_one,plot_no,plot_wrong,ncol=1, nrow=4)
plot_true <-ggplot(x,aes(x=x[,5],fill = factor(cat)))+geom_histogram(binwidth=0.01,colour="black")+xlim(0.75,1)
plot_true <- plot_true + xlab("Coverage probability") + scale_fill_discrete(name = "Group") + geom_vline(aes(xintercept = 0.95), colour="black", linetype = "dashed")
plot_one <-ggplot(x,aes(x=x[,6],fill = factor(cat)))+geom_histogram(binwidth=0.01,colour="black")+xlim(0.75,1)
plot_one <- plot_one + xlab("Coverage probability") + scale_fill_discrete(name = "Group") + geom_vline(aes(xintercept = 0.95), colour="black", linetype = "dashed")
plot_no <-ggplot(x,aes(x=x[,7],fill = factor(cat)))+geom_histogram(binwidth=0.01,colour="black")+xlim(0.75,1)
plot_no <- plot_no + xlab("Coverage probability") + scale_fill_discrete(name = "Group") + geom_vline(aes(xintercept = 0.95), colour="black", linetype = "dashed")
plot_wrong <-ggplot(x,aes(x=x[,8],fill = factor(cat)))+geom_histogram(binwidth=0.01,colour="black")+xlim(0.75,1)
plot_wrong <- plot_wrong + xlab("Coverage probability") + scale_fill_discrete(name = "Group") + geom_vline(aes(xintercept = 0.95), colour="black", linetype = "dashed")
grid.arrange(plot_true,plot_one,plot_no,plot_wrong,ncol=1, nrow=4)
plot_true <-ggplot(x,aes(x=x[,9],fill = factor(cat)))+geom_histogram(binwidth=0.01,colour="black")+xlim(0.75,1)
plot_true <- plot_true + xlab("Coverage probability") + scale_fill_discrete(name = "Group") + geom_vline(aes(xintercept = 0.95), colour="black", linetype = "dashed")
plot_one <-ggplot(x,aes(x=x[,10],fill = factor(cat)))+geom_histogram(binwidth=0.01,colour="black")+xlim(0.75,1)
plot_one <- plot_one + xlab("Coverage probability") + scale_fill_discrete(name = "Group") + geom_vline(aes(xintercept = 0.95), colour="black", linetype = "dashed")
plot_no <-ggplot(x,aes(x=x[,11],fill = factor(cat)))+geom_histogram(binwidth=0.01,colour="black")+xlim(0.75,1)
plot_no <- plot_no + xlab("Coverage probability") + scale_fill_discrete(name = "Group") + geom_vline(aes(xintercept = 0.95), colour="black", linetype = "dashed")
plot_wrong <-ggplot(x,aes(x=x[,12],fill = factor(cat)))+geom_histogram(binwidth=0.01,colour="black")+xlim(0.75,1)
plot_wrong <- plot_wrong + xlab("Coverage probability") + scale_fill_discrete(name = "Group") + geom_vline(aes(xintercept = 0.95), colour="black", linetype = "dashed")
grid.arrange(plot_true,plot_one,plot_no,plot_wrong,ncol=1, nrow=4)
plot_true <-ggplot(x,aes(x=x[,13],fill = factor(cat)))+geom_histogram(binwidth=0.01,colour="black")+xlim(0.75,1)
plot_true <- plot_true + xlab("Coverage probability") + scale_fill_discrete(name = "Group") + geom_vline(aes(xintercept = 0.95), colour="black", linetype = "dashed")
plot_one <-ggplot(x,aes(x=x[,14],fill = factor(cat)))+geom_histogram(binwidth=0.01,colour="black")+xlim(0.75,1)
plot_one <- plot_one + xlab("Coverage probability") + scale_fill_discrete(name = "Group") + geom_vline(aes(xintercept = 0.95), colour="black", linetype = "dashed")
plot_no <-ggplot(x,aes(x=x[,15],fill = factor(cat)))+geom_histogram(binwidth=0.01,colour="black")+xlim(0.75,1)
plot_no <- plot_no + xlab("Coverage probability") + scale_fill_discrete(name = "Group") + geom_vline(aes(xintercept = 0.95), colour="black", linetype = "dashed")
plot_wrong <-ggplot(x,aes(x=x[,16],fill = factor(cat)))+geom_histogram(binwidth=0.01,colour="black")+xlim(0.75,1)
plot_wrong <- plot_wrong + xlab("Coverage probability") + scale_fill_discrete(name = "Group") + geom_vline(aes(xintercept = 0.95), colour="black", linetype = "dashed")
grid.arrange(plot_true,plot_one,plot_no,plot_wrong,ncol=1, nrow=4)
0.1 * 0.4 * 0.4 * 0.7 * 0.7 * 0.7 * 0.5
0.1 * 0.1 * 0.3 * 0.1 * 0.1 * 0.1 * 0.1
0.693 + 0.47 +0.47 + 1.03*3 + 0.693
0.51 + 0.693 + 0.288 + 1.253+ 1.253 + 0.847 + 0.511
2 + 0.01*log2(0.01) + 0.03*log2(0.03)+0.01*log2(0.01)+0.95*log2(0.95)
2 + 0.5*log2(0.5) + 0.3*log2(0.3)+0.1*log2(0.1)+0.1*log2(0.1)
source("http://www.bioconductor.org/biocLite.R"
biocLite("Biostrings")
source("http://www.bioconductor.org/biocLite.R")
biocLite("Biostrings")
?BiocGenerics
A = matrix(0,4,6)
View(A)
B=[1]
A = matrix(c(1,1,4,1,19,15,2,1,1,1,1,1,1,19,15,19,1,4,18,1,2,1,1,2),4,6)
View(A)
A = matrix(c(1,1,4,1,19,15,2,1,1,1,1,1,1,19,15,19,1,4,18,1,2,1,1,2),4,6,byrow = TRUE)
View(A)
ref = c(0.3,0.2,0.2,0.3)
A = matrix(c(1,1,4,1,19,15,2,1,1,1,1,1,1,19,15,19,1,4,18,1,2,1,1,2),4,6,byrow = TRUE)
ref = c(0.3,0.2,0.2,0.3)
for (i in 1:6){
for (j in 1:4){
A[j,i] = log ((A[j,i]/22) / ref[j])
}
}
View(A)
read("C:\Users\Jerry Lu\Desktop\Upenn Study\Spring 2018\GCB 535\motif_1_freqs.txt")
read("C:/Users/Jerry Lu/Desktop/Upenn Study/Spring 2018/GCB 535/motif_1_freqs.txt")
pwm = read.csv("C:/Users/Jerry Lu/Desktop/Upenn Study/Spring 2018/GCB 535/motif_1_freqs.txt")
View(pwm)
pwm = read.table("C:/Users/Jerry Lu/Desktop/Upenn Study/Spring 2018/GCB 535/motif_1_freqs.txt")
View(pwm)
pwm = t(as.matrix(pwm))
View(pwm)
write.table(pwm,quote=F, row.names=F, col.names=F)
exp(-12.441)
install.packages("rmarkdown")
library("compositions", lib.loc="~/R/win-library/3.2")
setwd("C:/Users/Jerry Lu/Dropbox/graduate research/glm lasso/code-final version/IBD data analysis")
porp <- read.csv("C:/Users/Jerry Lu/Dropbox/graduate research/glm lasso/code-final version/IBD data analysis/results/x_select.csv", header=FALSE)
names(porp) <-c("Prevotella_copri","Ruminococcus_bromii","Clostridium_leptum","Escherichia_coli","Ruminococcus_gnavus")
porp$IBD = c(rep(1,26),rep(2,85))
porp$IBD_rep = c(rep(1,26),rep(4,85))
plot(acomp(porp[,c(1,2,3)]),pch = porp$IBD,col=porp$IBD_rep)
plot(acomp(porp[,c(1,2,4)]),pch = porp$IBD,col=porp$IBD_rep)
plot(acomp(porp[,c(1,2,5)]),pch = porp$IBD,col=porp$IBD_rep)
plot(acomp(porp[,c(1,3,4)]),pch = porp$IBD,col=porp$IBD_rep)
plot(acomp(porp[,c(1,3,5)]),pch = porp$IBD,col=porp$IBD_rep)
plot(acomp(porp[,c(1,4,5)]),pch = porp$IBD,col=porp$IBD_rep)
plot(acomp(porp[,c(2,3,4)]),pch = porp$IBD,col=porp$IBD_rep)
plot(acomp(porp[,c(2,3,5)]),pch = porp$IBD,col=porp$IBD_rep)
plot(acomp(porp[,c(2,4,5)]),pch = porp$IBD,col=porp$IBD_rep)
plot(acomp(porp[,c(3,4,5)]),pch = porp$IBD,col=porp$IBD_rep)
library(ggtern)
plot(acomp(porp[,c(3,4,5)]),pch = porp$IBD,col=porp$IBD_rep)
View(x)
View(porp)
View(porp)
plot(acomp(porp[,c(1,2,3)]),pch = porp$IBD,col=porp$IBD_rep)
plot1 = ggtern(porp,aes (Prevotella_copri, Ruminococcus_bromii, Clostridium_leptum, color=factor(IBD))) + geom_point()+ theme_gridsontop()
plot1 = plot1 + theme_showarrows()+labs(x="Prevotella_copri",y="Ruminococcus_bromii",z="Clostridium_leptum",title="Ternary Plot")
plot1 = plot1 + scale_color_discrete("Group",labels=c("Control", "Case")) + theme(legend.text=element_text(size=20))
plot1
savepath="plots_more/Ternary1.pdf"
pdf(savepath,width=15, height = 15)
plot1
dev.off()
plot1 = ggtern(porp,aes (Prevotella_copri, Ruminococcus_bromii, Clostridium_leptum, color=factor(IBD))) + geom_point()+ theme_gridsontop()
plot1 = plot1 + theme_showarrows()+labs(x="Prevotella_copri",y="Ruminococcus_bromii",z="Clostridium_leptum",title="Ternary Plot")
plot1 = plot1 + scale_color_discrete("Group",labels=c("Control", "Case")) + theme(legend.text=element_text(size=20))
plot1
savepath="plots_more/Ternary1.pdf"
pdf(savepath,width=10, height = 10)
plot1
dev.off()
porp_temp = porp*10
plot1 = ggtern(porp_temp,aes (Prevotella_copri, Ruminococcus_bromii, Clostridium_leptum, color=factor(IBD))) + geom_point()+ theme_gridsontop()
plot1 = plot1 + theme_showarrows()+labs(x="Prevotella_copri",y="Ruminococcus_bromii",z="Clostridium_leptum",title="Ternary Plot")
plot1 = plot1 + scale_color_discrete("Group",labels=c("Control", "Case")) + theme(legend.text=element_text(size=20))
plot1
porp_temp = porp*1000
plot1 = ggtern(porp_temp,aes (Prevotella_copri, Ruminococcus_bromii, Clostridium_leptum, color=factor(IBD))) + geom_point()+ theme_gridsontop()
plot1 = plot1 + theme_showarrows()+labs(x="Prevotella_copri",y="Ruminococcus_bromii",z="Clostridium_leptum",title="Ternary Plot")
plot1 = plot1 + scale_color_discrete("Group",labels=c("Control", "Case")) + theme(legend.text=element_text(size=20))
plot1
